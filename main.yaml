openapi: 3.0.0
info:
  title: Music Bands Service
  version: 1.0.0
  description: Простое API для взаимодействия с коллекцией музыкальных групп
servers:
  - url: 'https://localhost:8080/api/v1/'

paths:
  /bands:
    post:
      summary: Создание новой группы
      tags:
        - Bands
      operationId: createBand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Band"
      responses:
        '200':
          description: Успешный ответ с данными о созданной группе
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Band"
        '400':
          description: Ошибка. Данные введены некорректно
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  message:
                    type: string
                    example: ['Координата y не может быть меньше -439']
        default:
          description: Дефолтная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
    get:
      summary: Получение всех групп
      tags:
        - Bands
      operationId: getBands
      parameters:
        - name: page
          in: query
          description: Номер страницы (начиная с 1)
          required: false
          schema:
            type: integer
            minimum: 1
            example: 1
        - name: size
          in: query
          description: Размер страницы (количество элементов на одной странице)
          required: false
          schema:
            type: integer
            minimum: 1
            example: 10
        - name: sortBy
          in: query
          description: Параметр для сортировки
          required: false
          schema:
            type: string
            enum:
              - id
              - name
              - creationDate
              - numberOfParticipants
              - genre
            example: name
        - name: sortDirection
          in: query
          description: Направление сортировки
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
            example: ASC
        - name: id
          in: query
          description: Идентификатор группы
          required: false
          schema:
            type: integer
            minimum: 1
            example: 1
        - name: id.gt
          in: query
          description: Идентификатор группы должен быть больше...
          required: false
          schema:
            type: integer
            example: 25
        - name: id.gte
          in: query
          description: Идентификатор группы должен быть больше или равен...
          required: false
          schema:
            type: integer
            example: 24
        - name: id.lt
          in: query
          description: Идентификатор группы должен быть меньше...
          required: false
          schema:
            type: integer
            example: 13
        - name: id.lte
          in: query
          description: Идентификатор группы должен быть меньше или равен...
          required: false
          schema:
            type: integer
            example: 12
        - name: name
          in: query
          description: Имя группы
          required: false
          schema:
            type: string
            minLength: 1
            example: ZOLOTO
        - name: coordinate.x
          in: query
          description: Координата х
          required: false
          schema:
            type: number
            format: int64
            example: 1
        - name: coordinate.x.gt
          in: query
          description: Координата х должна быть больше...
          required: false
          schema:
            type: number
            format: int64
            example: 45
        - name: coordinate.x.gte
          in: query
          description: Координата х должна быть больше или равна...
          required: false
          schema:
            type: number
            format: int64
            example: 44
        - name: coordinate.x.lt
          in: query
          description: Координата х должна быть меньше...
          required: false
          schema:
            type: number
            format: int64
            example: 23
        - name: coordinate.x.lte
          in: query
          description: Координата х должна быть меньше или равна...
          required: false
          schema:
            type: number
            format: int64
            example: 22
        - name: coordinate.y
          in: query
          description: Координата y
          required: false
          schema:
            type: number
            format: double
            minimum: -439
            example: 1
        - name: coordinate.y.gt
          in: query
          description: Координата y должна быть больше...
          required: false
          schema:
            type: number
            format: double
            minimum: -439
            example: 52
        - name: coordinate.y.gte
          in: query
          description: Координата y должна быть больше или равна...
          required: false
          schema:
            type: number
            format: double
            minimum: -439
            example: 82
        - name: coordinate.y.lt
          in: query
          description: Координата y должна быть меньше...
          required: false
          schema:
            type: number
            format: double
            minimum: -439
            example: 66
        - name: coordinate.y.lte
          in: query
          description: Координата y должна быть меньше или равна...
          required: false
          schema:
            type: number
            format: double
            minimum: -439
            example: 43
        - name: creationDate
          in: query
          description: Дата создания
          required: false
          schema:
            type: string
            format: date-time
            nullable: false
            example: 2024-09-13T11:00:01.637Z
        - name: creationDate.gt
          in: query
          description: Дата создания должна быть позже...
          required: false
          schema:
            type: string
            format: date-time
            nullable: false
            example: 2007-07-13T11:00:01.637Z
        - name: creationDate.gte
          in: query
          description: Дата создания должна быть позже или равна...
          required: false
          schema:
            type: string
            format: date-time
            nullable: false
            example: 2024-09-30T11:00:01.637Z
        - name: creationDate.lt
          in: query
          description: Дата создания должна быть раньше...
          required: false
          schema:
            type: string
            format: date-time
            nullable: false
            example: 2024-09-12T11:00:01.637Z
        - name: creationDate.lte
          in: query
          description: Дата создания должна быть раньше или равна...
          required: false
          schema:
            type: string
            format: date-time
            nullable: false
            example: 2024-08-13T11:00:01.637Z
        - name: numberOfParticipants
          in: query
          description: Количество участников
          required: false
          schema:
            type: integer
            minimum: 1
            example: 1
        - name: numberOfParticipants.gt
          in: query
          description: Количество участников должно быть больше...
          required: false
          schema:
            type: integer
            minimum: 1
            example: 1
        - name: numberOfParticipants.gte
          in: query
          description: Количество участников должно быть больше или равно...
          required: false
          schema:
            type: integer
            minimum: 1
            example: 1
        - name: numberOfParticipants.lt
          in: query
          description: Количество участников должно быть меньше...
          required: false
          schema:
            type: integer
            minimum: 1
            example: 1
        - name: numberOfParticipants.lte
          in: query
          description: Количество участников должно быть меньше или равно...
          required: false
          schema:
            type: integer
            minimum: 1
            example: 1
        - name: description
          in: query
          description: Описание группы
          required: false
          schema:
            type: string
            minLength: 1
            example: Мы лучшая группа в мире
        - name: genre
          in: query
          description: Жанр группы
          required: false
          schema:
            type: string
            enum:
              - ROCK
              - SOUL
              - MATH_ROCK
              - POST_ROCK
            example: SOUL
        - name: person.name
          in: query
          description: Имя солиста
          required: false
          schema:
            type: string
            minLength: 1
            example: Владимир
      responses:
        '200':
          description: Успешный ответ с массивом групп
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Band"
                  total:
                    type: integer
                    description: Общее количество элементов
                  totalPages:
                    type: integer
                    description: Общее количество страниц
                  currentPage:
                    type: integer
                    description: Текущий номер страницы
                  size:
                    type: integer
                    description: Размер страницы
        '400':
          description: Ошибка. Неправильные параметры фильтрации или сортировки
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  message:
                    type: string
                    example: Неправильные параметры
        default:
          description: Дефолтная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
  /bands/{band-id}:
    get:
      summary: Получение группы по идентификатору
      tags:
        - Bands
      operationId: getPersonById
      parameters:
        - name: band-id
          description: Идентификатор группы
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ с данными о группе
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Band"
        default:
          description: Дефолтная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
    delete:
      summary: Удаление группы по идентификатору
      tags:
        - Bands
      operationId: deleteBandById
      parameters:
        - name: band-id
          description: Идентификатор группы
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Успешный ответ
          content:
            application/json: {}
        default:
          description: Дефолтная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
    put:
      summary: Обновление данных о группе по идентификатору
      tags:
        - Bands
      operationId: updateBandById
      parameters:
        - name: band-id
          description: Идентификатор группы
          in: path
          required: true
          schema:
            type: integer
        - name: name
          in: query
          description: Имя группы
          required: false
          schema:
            type: string
            minLength: 1
            example: ZOLOTO
        - name: coordinate.x
          in: query
          description: Координата х
          required: true
          schema:
            type: number
            format: int64
            example: 1
        - name: coordinate.y
          in: query
          description: Координата y
          required: true
          schema:
            type: number
            format: double
            minimum: -439
            example: 1
        - name: description
          in: query
          description: Описание группы
          required: true
          schema:
            type: string
            example: bebebe
        - name: genre
          in: query
          description: Жанр группы
          required: true
          schema:
            type: string
            enum:
              - ROCK
              - SOUL
              - MATH_ROCK
              - POST_ROCK
            example: SOUL

      responses:
        '200':
          description: Успешный ответ с данными об обновлённой группе
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Band"
        '400':
          description: Ошибка. Данные введены некорректно
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  message:
                    type: string
                    example: Координата y не может быть меньше -439
        default:
          description: Дефолтная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
  /bands/genre/{genre}:
    delete:
      summary: Удаление групп по жанру
      description: Регистронезависимый запрос
      tags:
        - Bands
      operationId: deleteBandsByGenre
      parameters:
        - name: genre
          description: Жанр группы
          in: path
          required: true
          schema:
            type: string
            enum:
              - ROCK
              - SOUL
              - MATH_ROCK
              - POST_ROCK
      responses:
        '204':
          description: Успешный ответ
          content:
            application/json: {}
        default:
          description: Дефолтная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
  /bands/genre/min:
    get:
      summary: Получение группы с минимальным жанром
      description: 'Сортировка идёт по жанрам в алфавитном порядке, минимальным является последний в списке: 1. MATH_ROCK, 2. POST_ROCK, 3. ROCK, 4. SOUL'
      tags:
        - Bands
      operationId: getGroupWithMinGenre
      responses:
        '200':
          description: Группа с минимальным жанром
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Band'
        '400':
          description: Ошибка. Неправильные параметры
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  message:
                    type: string
                    example: Неправильные параметры
        default:
          description: Дефолтная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
components:
  schemas:
    Band:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
          uniqueItems: true
          readOnly: true
        name:
          type: string
          minLength: 1
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        creationDate:
          type: string
          format: date-time
          readOnly: true
          default: 2011-12-03T10:15:30+01:00
        numberOfParticipants:
          type: number
          format: int64
          minimum: 1
        description:
          type: string
        genre:
          $ref: '#/components/schemas/MusicGenre'
        frontMan:
          $ref: '#/components/schemas/Frontman'
        singles:
          type: array
          items:
            $ref: '#/components/schemas/Single'
      required:
        - id
        - name
        - coordinates
        - creationDate
        - numberOfParticipants
        - description
        - genre

    Person:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        birthday:
          type: string
          format: date
          nullable: true
        passportID:
          type: string
          uniqueItems: true
        location:
          $ref: '#/components/schemas/Location'
        groupID:
          type: integer
      required:
        - id
        - location
        - groupID

    Single:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 10

    Coordinates:
      type: object
      properties:
        x:
          type: number
          format: int64
        y:
          type: number
          format: double
          minimum: -439
          nullable: false
      required:
        - x
        - y

    Location:
      type: object
      properties:
        x:
          type: number
          format: float
          nullable: false
        y:
          type: number
          format: float
        z:
          type: integer
        name:
          type: string
          minLength: 1
          nullable: true
      required:
        - x
        - y
        - z

    MusicGenre:
      type: string
      enum:
        - ROCK
        - SOUL
        - MATH_ROCK
        - POST_ROCK

    DefaultError:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 404
        message:
          type: string
          example: Ресурс не найден

    Frontman:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        birthday:
          type: string
          format: date
          nullable: true
        passportID:
          type: string
          uniqueItems: true
        location:
          $ref: '#/components/schemas/Location'
      required:
        - id
        - location