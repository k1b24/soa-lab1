openapi: 3.0.0
info:
  title: Music Bands Service
  version: 1.0.0
  description: Простое API для взаимодействия с коллекцией музыкальных групп
servers:
  - url: 'https://localhost:8080/api/v1'

paths:
  /space-marines:
    post:
      summary: Создание нового десантника (призыв)
      tags:
        - SpaceMarines
      operationId: createSpaceMarine
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpaceMarine"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpaceMarine"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  message:
                    type: string
                    example: ['Координата х не может быть больше 683']
        default:
          description: Дефолтная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
    get:
      summary: Получение всех десантников (отмечаем в военкомате)
      tags:
        - SpaceMarines
      operationId: getSpaceMarine
      parameters:
        - name: limit
          in: query
          description: Количество элементов в выдаче
          required: false
          schema:
            type: integer
            minimum: 1
            example: 10
        - name: offset
          in: query
          description: Сдвиг по элементам от начала
          required: false
          schema:
            type: integer
            minimum: 1
            example: 10
        - name: sortBy
          in: query
          description: Параметр для сортировки
          required: false
          schema:
            type: string
            enum:
              - id
              - name
              - creationDate
              - health
              - height
              - category
            example: name
        - name: sortDirection
          in: query
          description: Направление сортировки
          required: false
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
            example: ASC
        - name: minId
          in: query
          description: Минимальный айди десантника
          required: false
          schema:
            type: integer
            minimum: 1
            example: 25
        - name: maxId
          in: query
          description: Максимальный айди десантника
          required: false
          schema:
            minimum: 1
            type: integer
            example: 50
        - name: name
          in: query
          description: Имя десантника
          required: false
          schema:
            type: string
            minLength: 1
            example: Серж
        - name: minX
          in: query
          description: Минимальная координата х
          required: false
          schema:
            type: number
            format: float
            example: -1337.3
        - name: maxX
          in: query
          description: Максимальная координата х
          required: false
          schema:
            type: number
            format: float
            example: 1337.3
        - name: minY
          in: query
          description: Минимальная координата y
          required: false
          schema:
            type: number
            format: double
            example: -1337.3
        - name: maxY
          in: query
          description: Максимальная координата y
          required: false
          schema:
            type: number
            format: double
            example: 1337.3
        - name: minCreationDate
          in: query
          description: Дата создания должна быть позже...
          required: false
          schema:
            type: string
            format: date-time
            nullable: false
            example: 2007-07-13T11:00:01.637Z
        - name: maxCreationDate
          in: query
          description: Дата создания должна быть позже или равна...
          required: false
          schema:
            type: string
            format: date-time
            nullable: false
            example: 2024-09-30T11:00:01.637Z
        - &minHealth
          name: minHealth
          in: query
          description: Минимальное здоровье
          required: false
          schema:
            type: number
            format: float
            minimum: 0
            example: 1337.3
        - name: maxHealth
          in: query
          description: Максимальное здоровье
          required: false
          schema:
            type: number
            format: float
            minimum: 0
            example: 1337.3
        - name: loyal
          in: query
          description: Верный императору (че)
          required: false
          schema:
            type: boolean
        - name: minHeight
          in: query
          description: Минимальный рост
          required: false
          schema:
            type: number
            format: double
            example: 1337.3
        - name: maxHeight
          in: query
          description: Максимальный рост
          required: false
          schema:
            type: number
            format: double
            example: 1337.3
        - name: category
          in: query
          description: Масть
          required: false
          schema:
            type: string
            enum:
              - DREADNOUGHT
              - INCEPTOR
              - SUPPRESSOR
              - TERMINATOR
              - LIBRARIAN
            example: SUPPRESSOR
        - name: chapterName
          in: query
          description: Часть
          required: false
          schema:
            type: string
            minLength: 1
            example: third
        - name: chapterWorld
          in: query
          description: Мир
          required: false
          schema:
            type: string
            minLength: 1
            example: outworld
      responses:
        '200':
          description: Успешный ответ с массивом групп
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Band"
                  total:
                    type: integer
                    description: Общее количество элементов
                  limit:
                    type: integer
                    description: Количество элементов
                  offset:
                    type: integer
                    description: Сдвиг по элементам
        '400':
          description: Ошибка. Неправильные параметры фильтрации или сортировки
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  message:
                    type: string
                    example: Неправильные параметры
        default:
          description: Дефолтная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
  /bands/{band-id}:
    get:
      summary: Получение группы по идентификатору
      tags:
        - Bands
      operationId: getPersonById
      parameters:
        - name: band-id
          description: Идентификатор группы
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ с данными о группе
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Band"
        default:
          description: Дефолтная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
    put:
      summary: Обновление десантника (мобилизация)
      tags:
        - SpaceMarines
      operationId: updateSpaceMarine
      parameters:
        - *space-marine-id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpaceMarine"
      responses:
        '204':
          description: Updated
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  message:
                    type: string
                    example: [ 'Координата х не может быть больше 683' ]
        default:
          description: Дефолтная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
    delete:
      summary: Удаление группы по идентификатору
      tags:
        - Bands
      operationId: deleteBandById
      parameters:
        - name: band-id
          description: Идентификатор группы
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Успешный ответ
          content:
            application/json: {}
        default:
          description: Дефолтная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
    put:
      summary: Обновление данных о группе по идентификатору
      tags:
        - Bands
      operationId: updateBandById
      parameters:
        - name: band-id
          description: Идентификатор группы
          in: path
          required: true
          schema:
            type: integer
        - name: name
          in: query
          description: Имя группы
          required: false
          schema:
            type: string
            minLength: 1
            example: ZOLOTO
        - name: coordinate.x
          in: query
          description: Координата х
          required: true
          schema:
            type: number
            format: int64
            example: 1
        - name: coordinate.y
          in: query
          description: Координата y
          required: true
          schema:
            type: number
            format: double
            minimum: -439
            example: 1
        - name: description
          in: query
          description: Описание группы
          required: true
          schema:
            type: string
            example: bebebe
        - name: genre
          in: query
          description: Жанр группы
          required: true
          schema:
            type: string
            enum:
              - ROCK
              - SOUL
              - MATH_ROCK
              - POST_ROCK
            example: SOUL

      responses:
        '200':
          description: Успешный ответ с данными об обновлённой группе
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Band"
        '400':
          description: Ошибка. Данные введены некорректно
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  message:
                    type: string
                    example: Координата y не может быть меньше -439
        default:
          description: Дефолтная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
  /bands/genre/{genre}:
    delete:
      summary: Удаление групп по жанру
      description: Регистронезависимый запрос
      tags:
        - Bands
      operationId: deleteBandsByGenre
      parameters:
        - name: genre
          description: Жанр группы
          in: path
          required: true
          schema:
            type: string
            enum:
              - DREADNOUGHT
              - INCEPTOR
              - SUPPRESSOR
              - TERMINATOR
              - LIBRARIAN
      responses:
        '204':
          description: Успешный ответ
          content:
            application/json: {}
        default:
          description: Дефолтная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
  /bands/genre/min:
    get:
      summary: Получение группы с минимальным жанром
      description: 'Сортировка идёт по жанрам в алфавитном порядке, минимальным является последний в списке: 1. MATH_ROCK, 2. POST_ROCK, 3. ROCK, 4. SOUL'
      tags:
        - Bands
      operationId: getGroupWithMinGenre
      responses:
        '200':
          description: Группа с минимальным жанром
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Band'
        '400':
          description: Ошибка. Неправильные параметры
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  message:
                    type: string
                    example: Неправильные параметры
        default:
          description: Дефолтная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
components:
  schemas:
    Band:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
          uniqueItems: true
          readOnly: true
        name:
          type: string
          minLength: 1
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        creationDate:
          type: string
          format: date-time
          readOnly: true
          default: 2011-12-03T10:15:30+01:00
        numberOfParticipants:
          type: number
          format: int64
          minimum: 1
        description:
          type: string
        genre:
          $ref: '#/components/schemas/MusicGenre'
        frontMan:
          $ref: '#/components/schemas/Frontman'
        singles:
          type: array
          items:
            $ref: '#/components/schemas/Single'
      required:
        - name
        - coordinates
        - creationDate
        - numberOfParticipants
        - description
        - genre

    Person:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        birthday:
          type: string
          format: date
          nullable: true
        passportID:
          type: string
          uniqueItems: true
        location:
          $ref: '#/components/schemas/Location'
        groupID:
          type: integer
      required:
        - id
        - location
        - groupID

    Single:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 10

    Coordinates:
      type: object
      properties:
        x:
          type: number
          format: int64
        y:
          type: number
          format: double
          minimum: -439
          nullable: false
      required:
        - x
        - y

    Location:
      type: object
      properties:
        x:
          type: number
          format: float
          nullable: false
        y:
          type: number
          format: float
        z:
          type: integer
        name:
          type: string
          minLength: 1
          nullable: true
      required:
        - x
        - y
        - z

    MusicGenre:
      type: string
      enum:
        - ROCK
        - SOUL
        - MATH_ROCK
        - POST_ROCK

    DefaultError:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 404
        message:
          type: string
          example: Ресурс не найден

    Frontman:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        birthday:
          type: string
          format: date
          nullable: true
        passportID:
          type: string
          uniqueItems: true
        location:
          $ref: '#/components/schemas/Location'
      required:
        - id
        - location